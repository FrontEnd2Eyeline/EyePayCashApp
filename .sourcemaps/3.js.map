{"version":3,"sources":["../../src/pages/password-update/password-update.module.ts","../../src/components/components.module.ts","../../src/components/msg-error/msg-error.ts","../../src/pages/password-update/password-update.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAuC;AACO;AACO;AACD;AACkB;AAYtE;IAAA;IACA,CAAC;IADY,wBAAwB;QAVpC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4EAAkB;aACnB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,4EAAkB,CAAC;gBAC/C,4EAAe;gBACf,uFAAgB;aACd;SACF,CAAC;OACW,wBAAwB,CACpC;IAAD,+BAAC;CAAA;AADoC;;;;;;;;;;;;;;;;;;;AChBE;AACiB;AACX;AAO7C;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAL5B,uEAAQ,CAAC;YACT,YAAY,EAAE,CAAC,+EAAiB,CAAC;YACjC,OAAO,EAAE,CAAC,qEAAY,CAAC;YACvB,OAAO,EAAE,CAAC,+EAAiB,CAAC;SAC5B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;ACTkB;AACJ;AAC8B;AAOzE;IAKE;IAAgB,CAAC;IAEjB,sBAAI,2CAAY;aAAhB;YACE,GAAG,CAAC,CAAC,IAAI,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7E,MAAM,CAAC,4FAAkB,CAAC,wBAAwB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjH,CAAC;YACH,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;;;OAAA;IAbQ;QAAR,oEAAK,EAAE;kCAAU,mEAAW;sDAAC;IACrB;QAAR,oEAAK,EAAE;;mDAAc;IAHX,iBAAiB;QAJ7B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,yEAAyE;SACpF,CAAC;;OACW,iBAAiB,CAgB7B;IAAD,wBAAC;CAAA;AAhB6B;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACmD;AACnD;AAC6B;AACM;AACT;AAEpE;;;;;GAKG;AAOH;IAmBC,4BAAmB,OAAsB,EACjC,SAAoB,EACnB,GAAQ,EACT,SAA0B,EACzB,YAA8B,EAC/B,WAA8B,EAC9B,aAAiC;QANtB,YAAO,GAAP,OAAO,CAAe;QACjC,cAAS,GAAT,SAAS,CAAW;QACnB,QAAG,GAAH,GAAG,CAAK;QACT,cAAS,GAAT,SAAS,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAkB;QAC/B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,kBAAa,GAAb,aAAa,CAAoB;QAvBlC,iBAAY,GAAQ;YAC1B,YAAY,EAAE,IAAI;YAClB,iBAAiB,EAAE,IAAI;YACvB,QAAQ,EAAE,IAAI;SACd,CAAC;QAEF,cAAS,GAAG,IAAI,iEAAS,CAAC;YACzB,YAAY,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE;gBACjC,kEAAU,CAAC,QAAQ;aACnB,CACA;YACD,iBAAiB,EAAE,IAAI,mEAAW,CAAC,EAAE,EAAE;gBACtC,kEAAU,CAAC,QAAQ;aAAC,CACpB;YACD,QAAQ,EAAE,IAAI,mEAAW,EAAE;SAC3B,CAAC,CAAC;QAUD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA0DC;QAzDA,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,UAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACtC,OAAO,EAAE,MAAM;aACf,CAAC,CAAC;YAEH,UAAQ,CAAC,OAAO,EAAE,CAAC;YACnB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAE,UAAC,IAAI;gBACtE,UAAQ,CAAC,OAAO,EAAE,CAAC;gBACnB,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,GAAG,sCAAsC,CAAC;gBACxE,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;gBAClC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACd,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,UAAQ,CAAC,OAAO,EAAE,CAAC;gBACnB,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;oBACvB,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAChC,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;gBACzC,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YACnC,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,+FAA+F;QAC/F,gFAAgF;QAChF,yGAAyG;QACzG,6CAA6C;QAC7C,uBAAuB;QACvB,SAAS;QACT,wBAAwB;QACxB,+EAA+E;QAE/E,yBAAyB;QACzB,+EAA+E;QAC/E,yCAAyC;QACzC,yCAAyC;QACzC,2BAA2B;QAC3B,wBAAwB;QACxB,yBAAyB;QACzB,oCAAoC;QACpC,uCAAuC;QACvC,UAAU;QACV,gDAAgD;QAChD,yCAAyC;QACzC,SAAS;QACT,aAAa;QACb,sFAAsF;QACtF,wCAAwC;QACxC,MAAM;QACN,YAAY;QACZ,oEAAoE;QACpE,uCAAuC;QACvC,KAAK;QACL,WAAW;QACX,kEAAkE;QAClE,sCAAsC;QACtC,IAAI;IACL,CAAC;IAzFW,kBAAkB;QAJ9B,wEAAS,CAAC;YACV,QAAQ,EAAE,sBAAsB;WACG;SACnC,CAAC;6EAoBwC;YACtB,4DAAS;YACd,sEAAG;YACE,wFAAe;YACX,wEAAgB;YAClB,8FAAiB;YACf,eAAkB;OAzB7B,kBAAkB,CA4F9B;IAAD,CAAC;AAAA;SA5FY,kBAAkB,gB","file":"3.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {PasswordUpdatePage} from './password-update';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  declarations: [\n    PasswordUpdatePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PasswordUpdatePage),\n\tTranslateModule,\n\tComponentsModule,\n  ],\n})\nexport class PasswordUpdatePageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-update/password-update.module.ts","import {NgModule} from '@angular/core';\nimport {MsgErrorComponent} from './msg-error/msg-error';\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n\tdeclarations: [MsgErrorComponent],\n\timports: [CommonModule],\n\texports: [MsgErrorComponent]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import {Component, Input} from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {ValidationProvider} from \"../../providers/validation/validation\";\n\n\n@Component({\n  selector: 'msg-error',\n  template: '<div><span *ngIf=\"errorMessage !== false\">{{errorMessage}}</span></div>'\n})\nexport class MsgErrorComponent {\n\n  @Input() control: FormControl;\n  @Input() name: string;\n\n  constructor() { }\n\n  get errorMessage() {\n    for (let propertyName in this.control.errors) {\n      if (this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\n        return ValidationProvider.getValidatorErrorMessage(propertyName, this.control.errors[propertyName], this.name);\n      }\n    }\n\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/msg-error/msg-error.ts","import { Component } from '@angular/core';\nimport { IonicPage, LoadingController, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { Api } from \"../../providers/api\";\nimport { AuthUserProvider } from \"../../providers/auth-user/auth-user\";\nimport { ModalErrorProvider } from '../../providers/modal-error/modal-error';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n/**\n * Generated class for the PasswordUpdatePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n\tselector: 'page-password-update',\n\ttemplateUrl: 'password-update.html',\n})\nexport class PasswordUpdatePage {\n\n\tpublic infoRecovery: any = {\n\t\tnew_password: null,\n\t\tnew_password_conf: null,\n\t\treset_id: null,\n\t};\n\n\tformGroup = new FormGroup({\n\t\tnew_password: new FormControl('', [\n\t\t\tValidators.required,\n\t\t]\n\t\t),\n\t\tnew_password_conf: new FormControl('', [\n\t\t\tValidators.required]\n\t\t),\n\t\treset_id: new FormControl(),\n\t});\n\n\tconstructor(public navCtrl: NavController,\n\t\tpublic navParams: NavParams,\n\t\tprivate api: Api,\n\t\tpublic toastCtrl: ToastController,\n\t\tprivate userProvider: AuthUserProvider,\n\t\tpublic loadingCtrl: LoadingController,\n\t\tpublic errorProvider: ModalErrorProvider\n\t) {\n\t\t this.infoRecovery.reset_id = navParams.get('reset_id');\n\t\tthis.formGroup.get('reset_id').setValue(this.infoRecovery.reset_id);\n\t}\n\n\trecovery() {\n\t\tif (this.formGroup.valid) {\n\t\t\tlet cargando = this.loadingCtrl.create({\n\t\t\t\tspinner: 'dots',\n\t\t\t});\n\n\t\t\tcargando.present();\n\t\t\tthis.api.post('auth/update-password', this.formGroup.value).then ((data)=>{\n\t\t\t\tcargando.dismiss();\n\t\t\t\tthis.errorProvider.obj.message = 'Contraseña actualizada correctamente';\n\t\t\t\tthis.errorProvider.presentModal();\n\t\t\t\tthis.navCtrl.setRoot('LoginPage');\n\t\t\t}).catch((error) => {\n\t\t\t\tlet mensaje = '';\n\t\t\t\tcargando.dismiss();\n\t\t\t\terror.error.forEach(data => {\n\t\t\t\t\tmensaje += data.message + \"\\n\";\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.errorProvider.obj.message = mensaje;\n\t\t\t\tthis.errorProvider.presentModal();\n\t\t\t});\n\t\t}\n\n\t\t// if (this.infoRecovery.new_password != null && this.infoRecovery.new_password_conf != null) {\n\t\t// \tif (this.infoRecovery.new_password_conf == this.infoRecovery.new_password) {\n\t\t// \t\tif (this.infoRecovery.new_password.length >= 6 && this.infoRecovery.new_password_conf.length >= 6) {\n\t\t// \t\t\tlet loading = this.loadingCtrl.create({\n\t\t// \t\t\t\tspinner: 'dots',\n\t\t// \t\t\t});\n\t\t// \t\t\tloading.present();\n\t\t// \t\t\tthis.api.post('auth/update-password', this.infoRecovery).then((data) => {\n\n\t\t// \t\t\t\tloading.dismiss();\n\t\t// \t\t\t\tthis.errorProvider.obj.message = 'Contraseña actualizada correctamente';\n\t\t// \t\t\t\tthis.errorProvider.presentModal();\n\t\t// \t\t\t\tthis.navCtrl.setRoot('LoginPage');\n\t\t// \t\t\t}).catch((error) => {\n\t\t// \t\t\t\tlet mensaje = '';\n\t\t// \t\t\t\tloading.dismiss();\n\t\t// \t\t\t\terror.error.forEach(data => {\n\t\t// \t\t\t\t\tmensaje += data.message + \"\\n\";\n\t\t// \t\t\t\t});\n\t\t// \t\t\t\tthis.errorProvider.obj.message = mensaje;\n\t\t// \t\t\t\tthis.errorProvider.presentModal();\n\t\t// \t\t\t});\n\t\t// \t\t} else {\n\t\t// \t\t\tthis.errorProvider.obj.message = 'La contraseña debe tener mínimo 6 caracteres';\n\t\t// \t\t\tthis.errorProvider.presentModal();\n\t\t// \t\t}\n\t\t// \t} else {\n\t\t// \t\tthis.errorProvider.obj.message = 'Las contraseñas no cinciden';\n\t\t// \t\tthis.errorProvider.presentModal();\n\t\t// \t}\n\t\t// } else {\n\t\t// \tthis.errorProvider.obj.message = 'Los datos son obligatorios';\n\t\t// \tthis.errorProvider.presentModal();\n\t\t// }\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-update/password-update.ts"],"sourceRoot":""}