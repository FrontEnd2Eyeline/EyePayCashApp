{"version":3,"sources":["../../src/pages/recovery-password/recovery-password.module.ts","../../src/pages/recovery-password/recovery-password.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACW;AAU3D;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QARtC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,gFAAoB;aACrB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,gFAAoB,CAAC;aAC/C;SACF,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZC;AACqD;AACrD;AAC6B;AAErE;;;;;GAKG;AAOH;IAOE,8BAAmB,OAAsB,EACtB,SAAoB,EACnB,GAAQ,EACT,SAA0B,EACzB,YAA8B,EAC/B,WAA8B;QAL9B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,QAAG,GAAH,GAAG,CAAK;QACT,cAAS,GAAT,SAAS,CAAiB;QACzB,iBAAY,GAAZ,YAAY,CAAkB;QAC/B,gBAAW,GAAX,WAAW,CAAmB;QAV1C,SAAI,GAAG,IAAI,CAAC;QACZ,SAAI,GAAG,OAAO,CAAC;QACf,cAAS,GAAG,IAAI,CAAC;QACjB,WAAM,GAAG,IAAI,CAAC;QACd,aAAQ,GAAG,KAAK,CAAC;IAOxB,CAAC;IAED,0CAAW,GAAX;QAAA,iBAgCC;QA/BC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,SAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACpC,OAAO,EAAC,MAAM;aACf,CAAC,CAAC;YACH,SAAO,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,IAAI,CAChF,UAAC,IAAI;gBACH,SAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC;oBACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,IAAI;oBACF,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACrE,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACxD,CAAC,CACF,CAAC,KAAK,CAAC,aAAG;gBACT,SAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,8BAA8B;oBACvC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,qCAAqC;gBAC9C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IAEH,aAAa;IACX,uCAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,SAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACpC,OAAO,EAAC,MAAM;aACf,CAAC,CAAC;YACH,SAAO,CAAC,OAAO,EAAE,CAAC;YAClB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAC,EAAC,MAAM,EAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,UAAC,IAAQ;gBACvF,SAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC;oBACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvB,IAAI;oBACF,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC;gBACrE,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAExD,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,sCAAsC;gBAC/C,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IAED,4CAAa,GAAb;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;YACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,IAAI;YACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,0CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,EAAE,EAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,EAAC;gBAC7D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAC1C,CAAC;YAAA,IAAI,EAAC;gBACJ,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,kCAAkC;oBAC3C,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,6CAA6C;gBACtD,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;IACH,CAAC;IA1GU,oBAAoB;QAJhC,wEAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;WACG;SACtC,CAAC;6EAQyC;YACX,4DAAS;YACd,sEAAG;YACE,wFAAe;YACX,wEAAgB;YAClB,iBAAiB;OAZtC,oBAAoB,CA4GhC;IAAD,CAAC;AAAA;SA5GY,oBAAoB,gB","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RecoveryPasswordPage } from './recovery-password';\n\n@NgModule({\n  declarations: [\n    RecoveryPasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RecoveryPasswordPage),\n  ],\n})\nexport class RecoveryPasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recovery-password/recovery-password.module.ts","import {Component} from '@angular/core';\nimport {IonicPage, LoadingController, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {Api} from \"../../providers/api\";\nimport {AuthUserProvider} from \"../../providers/auth-user/auth-user\";\n\n/**\n * Generated class for the RecoveryPasswordPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-recovery-password',\n  templateUrl: 'recovery-password.html',\n})\nexport class RecoveryPasswordPage {\n\n  public data = null;\n  public type = 'phone';\n  public isvisible = true;\n  public codigo = null;\n  public iscodigo = false;\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              private api: Api,\n              public toastCtrl: ToastController,\n              private userProvider: AuthUserProvider,\n              public loadingCtrl: LoadingController) {\n  }\n\n  sendMessage() {\n    this.type = 'phone';\n    if (this.data != null) {\n      let loading = this.loadingCtrl.create({\n        spinner:'dots'\n      });\n      loading.present();\n      this.api.post('auth/restar-password', {'type': this.type, 'data': this.data}).then(\n        (data) => {\n          loading.dismiss();\n          if (!this.iscodigo)\n            this.iscodigo = true;\n          else\n            this.iscodigo = false;\n          this.userProvider.userRecovery.codigoVerify = data.password_code_req;\n          this.userProvider.userRecovery.user_id = data.user_id;\n        }\n      ).catch(err => {\n        loading.dismiss();\n        let toast = this.toastCtrl.create({\n          message: 'No se encontraron resultados',\n          duration: 3000,\n        });\n        toast.present();\n      });\n    } else {\n      let toast = this.toastCtrl.create({\n        message: 'Por favor ingrese su nùmero celular',\n        duration: 3000\n      });\n      toast.present();\n    }\n  }\n\n// 3114276555\n  sendMail() {\n    this.type = 'mail';\n    if (this.data != null) {\n      let loading = this.loadingCtrl.create({\n        spinner:'dots'\n      });\n      loading.present();\n      this.api.post('auth/restar-password',{'type':this.type, 'data':this.data}).then((data:any)=>{\n        loading.dismiss();\n        console.log(data);\n        if (!this.iscodigo)\n          this.iscodigo = true;\n        else\n          this.iscodigo = false;\n        this.userProvider.userRecovery.codigoVerify = data.password_code_req;\n        this.userProvider.userRecovery.user_id = data.user_id;\n\n      });\n    } else {\n      let toast = this.toastCtrl.create({\n        message: 'Por favor ingrese su direcciòn email',\n        duration: 3000\n      });\n      toast.present();\n    }\n  }\n\n  changeVisible() {\n    if (this.isvisible)\n      this.isvisible = false;\n    else\n      this.isvisible = true;\n  }\n\n  cancelar() {\n    this.navCtrl.pop();\n  }\n\n  confirmCode() {\n    if (this.codigo != null) {\n      if(this.userProvider.userRecovery.codigoVerify == this.codigo){\n        this.navCtrl.push('PasswordUpdatePage');\n      }else{\n        let toast = this.toastCtrl.create({\n          message: 'El còdigo ingresado no coincide!',\n          duration: 3000\n        });\n        toast.present();\n      }\n    } else {\n      let toast = this.toastCtrl.create({\n        message: 'Por favor ingrese el còdigo de verificaciòn',\n        duration: 3000\n      });\n      toast.present();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recovery-password/recovery-password.ts"],"sourceRoot":""}